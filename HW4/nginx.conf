
user  www;
worker_processes  1;

# This default error log path is compiled-in to make sure configuration parsing
# errors are logged somewhere, especially during unattended boot when stderr
# isn't normally logged anywhere. This path will be touched on every nginx
# start regardless of error log location configured here. See
# https://trac.nginx.org/nginx/ticket/147 for more info. 
#
error_log  /var/log/nginx/error.log info;
#

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;
    server_tokens off;
    upstream php-handler {
        #server 127.0.0.1:9000;
        server unix:/var/run/php-fpm.sock;
    }
    server {
        listen       80;
        server_name  _;
        #return 301 https://$host$request_uri;
        return 301 https://white-sa-hw4.nctu.me:8887;
    }

    server {
       	listen 443 ssl http2;
        server_name white-sa-hw4.nctu.me:8887;
        ssl_certificate /usr/local/etc/nginx/ssl/nginx.crt;
       	ssl_certificate_key /usr/local/etc/nginx/ssl/nginx.key;
	#proxy_ssl_server_name on;
	#proxy_ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
	#ssl_prefer_server_ciphers on;
        #return 301 https://white-sa-hw4.nctu.me:8887$request_uri;
    }

    server {
        listen 8887 ssl http2;
        server_name white-sa-hw4.nctu.me:8887;
        ssl_certificate /usr/local/etc/nginx/ssl/nginx.crt;
        ssl_certificate_key /usr/local/etc/nginx/ssl/nginx.key;
        #proxy_ssl_server_name on;
	#proxy_ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
	#ssl_prefer_server_ciphers on;
	add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";
        #charset koi8-r;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header X-Robots-Tag none;
        add_header X-Download-Options noopen;
        add_header X-Permitted-Cross-Domain-Policies none;
        add_header Referrer-Policy no-referrer;
	add_header X-Frame-Options "SAMEORIGIN" always;

        fastcgi_hide_header X-Powered-By;
        #access_log  logs/host.access.log  main;
        root /usr/local/www/nginx-dist;
        index index.php index.html index.htm;
        location / {
            #proxy_pass https://white-sa-hw4.nctu.me:8887
            try_files $uri $uri/ =404;
        }
        location /app {
            try_files $uri $uri/ /route/index.php?$args;
        }
        location /wsdemo {
            try_files $uri $uri/ /route/websockets.html;
        }
        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/local/www/nginx-dist;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        location ~ \.php$ {
            #try_files $uri =404;
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            fastcgi_pass   unix:/var/run/php-fpm.sock;
            fastcgi_index  index.php;
            fastcgi_param  SCRIPT_FILENAME $request_filename;
            include        fastcgi_params;
            fastcgi_read_timeout 3000;
        }
        location = /private {
	    allow 140.113.5.70;
	    deny all;
            try_files $uri $uri/ /private.html;
	    auth_basic_user_file /home/wcchang/.htpasswd;
            auth_basic "Restricted Content";
	    #try_files $uri $uri/ /private.html; 
        }
        location = /nextcloud/robots.txt {
            allow all;
            log_not_found off;
            access_log off;
	}
	location ~ /sites/~(.*)/ {
	    root /home/wcchang;
	    rewrite /sites/~(.*)/ /nextcloud_data/data/$1/files/public_html/index.html break;
	}
	#location ~ /nextcloud/data/(.*)/files/public_html/ {
		#echo 456789;
		#try_files $uri $uri/ /private.html;
	#}
        location /.well-known/carddav {
          return 301 /nextcloud/remote.php/dav;
        }
        location /.well-known/caldav {
          return 301 /nextcloud/remote.php/dav;
        }

        location /nextcloud/.well-known/acme-challenge { }

        location ^~ /nextcloud {

            # set max upload size
            client_max_body_size 512M;
            fastcgi_buffers 64 4K;

            # Enable gzip but do not remove ETag headers
            gzip on;
            gzip_vary on;
            gzip_comp_level 4;
            gzip_min_length 256;
            gzip_proxied expired no-cache no-store private no_last_modified no_etag auth;
            gzip_types application/atom+xml application/javascript application/json application/ld+json application/manifest+json application/rss+xml application/vnd.geo+json application/vnd.ms-fontobject application/x-font-ttf application/x-web-app-manifest+json application/xhtml+xml application/xml font/opentype image/bmp image/svg+xml image/x-icon text/cache-manifest text/css text/plain text/vcard text/vnd.rim.location.xloc text/vtt text/x-component text/x-cross-domain-policy;

            # Uncomment if your server is build with the ngx_pagespeed module
            # This module is currently not supported.
            #pagespeed off;

            location /nextcloud {
                rewrite ^ /nextcloud/index.php;
            }
	
            location ~ ^\/nextcloud\/(?:build|tests|config|lib|3rdparty|templates|data)\/ {
                #deny all;
            }
            location ~ ^\/nextcloud\/(?:\.|autotest|occ|issue|indie|db_|console) {
                deny all;
            }

            location ~ ^\/nextcloud\/(?:index|remote|public|cron|core\/ajax\/update|status|ocs\/v[12]|updater\/.+|oc[ms]-provider\/.+)\.php(?:$|\/) {
                fastcgi_split_path_info ^(.+?\.php)(\/.*|)$;
                set $path_info $fastcgi_path_info;
                try_files $fastcgi_script_name =404;
                include fastcgi_params;
                fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
                fastcgi_param PATH_INFO $path_info;
                fastcgi_param HTTPS on;
                # Avoid sending the security headers twice
                fastcgi_param modHeadersAvailable true;
                # Enable pretty urls
                fastcgi_param front_controller_active true;
                fastcgi_pass php-handler;
                fastcgi_intercept_errors on;
                fastcgi_request_buffering off;
            }

            location ~ ^\/nextcloud\/(?:updater|oc[ms]-provider)(?:$|\/) {
                try_files $uri/ =404;
                index index.php;
            }

            # Adding the cache control header for js, css and map files
            # Make sure it is BELOW the PHP block
            location ~ ^\/nextcloud\/.+[^\/]\.(?:css|js|woff2?|svg|gif|map)$ {
                try_files $uri /nextcloud/index.php$request_uri;
                add_header Cache-Control "public, max-age=15778463";
                # Add headers to serve security related headers  (It is intended
                # to have those duplicated to the ones above)
                # Before enabling Strict-Transport-Security headers please read
                # into this topic first.
                #add_header Strict-Transport-Security "max-age=15768000; includeSubDomains; preload;";
                #
                # WARNING: Only add the preload option once you read about
                # the consequences in https://hstspreload.org/. This option
                # will add the domain to a hardcoded list that is shipped
                # in all major browsers and getting removed from this list
                # could take several months.
                add_header X-Content-Type-Options nosniff;
                add_header X-XSS-Protection "1; mode=block";
                add_header X-Robots-Tag none;
                add_header X-Download-Options noopen;
                add_header X-Permitted-Cross-Domain-Policies none;
                add_header Referrer-Policy no-referrer;

                # Optional: Don't log access to assets
                access_log off;
            }

            location ~ ^\/nextcloud\/.+[^\/]\.(?:png|html|ttf|ico|jpg|jpeg|bcmap)$ {
                try_files $uri /nextcloud/index.php$request_uri;
                # Optional: Don't log access to other assets
                access_log off;
            }
        }

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }

    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    server {
        listen       80;
    #    listen       somename:8080;
        server_name  140.113.5.70;

        location / {
            root   /usr/local/www/nginx-ip;
            index  index.html index.htm;
        }
	location /wsdemo {
		try_files $uri $uri/ /route/websockets.html;
	}
    }


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}
    #include /usr/local/etc/nginx/next.conf;
}
